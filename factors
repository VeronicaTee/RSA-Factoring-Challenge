#!/usr/bin/python3
"""
Module that factorizes as many numbers as possible
into a product of two smaller numbers using optimized trial division.
"""

from sys import argv
from math import isqrt

def factorize(value):
    """
    Print a simple decomposition of an integer > 1 using optimized trial division.
    Args:
        value (int): The integer to be factorized.
    """
    if value < 2:
        return

    # Optimize trial division for smaller numbers
    i = 2
    limit = isqrt(value) + 1

    while i <= limit:
        if value % i == 0:
            print("{:.0f}={:.0f}*{:.0f}".format(value, i, value // i))
            return
        i += 1

    # If no factors found, value is prime
    print("{:.0f}={:.0f}*1".format(value, value))

def main():
    """
    Main function to read numbers from a file and factorize them.
    """
    if len(argv) != 2:
        print("Usage: {} <filename>".format(argv[0]))
        exit("Incorrect usage. Please provide a filename.")

    try:
        with open(argv[1]) as file:
            line = file.readline()

            while line != "":
                value = int(line.strip())
                factorize(value)
                line = file.readline()
    except FileNotFoundError:
        exit(f"Error: File '{argv[1]}' not found.")
    except ValueError:
        exit("Error: Invalid content in the file. Please provide valid integers.")

if __name__ == "__main__":
    main()
